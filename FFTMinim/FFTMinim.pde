import ddf.minim.*;
import ddf.minim.analysis.*;
import processing.serial.*;
Minim minim;
AudioInput input;
FFT fft;
Serial mySerial;

//FIXED
final int fftsize = 512;
final int samplerate = 24000;
final int columns = 20;
final int rows = 14;
//final float[] frequencyWindow = {64, 84, 111, 146, 192, 253, 334, 440, 580, 760, 880, 990, 1100, 1400, 1900, 2800, 3900, 5600, 7500, 9900, 12000};
final float[] frequencyWindow = {60, 70, 90, 120, 140, 180, 240, 280, 360, 480, 560, 720, 960, 1020, 1440, 1920, 2040, 3000, 5600, 9000, 12000};
//final float[] frequencyWindowLarge = {32.0000001237939, 33.83542190879378, 35.77611785366302, 37.82812616107891, 39.99783136649053, 42.2919842027032, 44.71772260383506, 47.28259391399582, 49.99457836978716, 52.86211392968736, 55.89412252757326, 59.10003783206346, 62.4898345980525, 66.0740597017587, 69.86386495584732, 73.87104180672814, 78.10805802198395, 82.58809648207716, 87.32509619702914, 92.33379567569125, 97.62977878254372, 103.2295232246995, 109.1504518199742, 115.4109867055348, 122.0306066557911, 129.0299076878636, 136.4306671431965, 144.2559114446956, 152.5299877402058, 161.2786396552403, 170.5290873906534, 180.3101124144698, 190.6521470113762, 201.5873689685002, 213.1498016920699, 225.3754200664628, 238.3022623850006, 251.9705487007548, 266.4228059655872, 281.7040003467844, 297.8616771329677, 314.9461086645773, 333.0104507491911, 352.1109080483521, 372.3069089504741, 393.6612904739152, 416.2404937755339, 440.1147708730102, 465.3584032241208, 492.0499328430599, 520.2724066728755, 550.1136349743612, 581.666464535341, 615.0290675504012, 650.3052470698757, 687.604759968448, 727.0436584382416, 768.7446510689047, 812.8374846381408, 859.459347800573, 908.7552979309608, 960.8787124498358, 1015.991766035784, 1074.265935209177, 1135.882531857254, 1201.033267360575, 1269.920849076053, 1342.75961103239, 1419.776180800282, 1501.210184612273, 1587.31499292608, 1678.358508751166, 1774.624001191312, 1876.410986796613, 1984.036161467121, 2097.834385807641, 2218.159726999444, 2345.386560430513, 2479.910734511975, 2622.150802304782, 2772.549323788739, 2931.574242825682, 3099.720343101034, 3277.510787573706, 3465.498746224115, 3664.26911716483, 3874.440346468849, 4096.666352377634, 4331.638559875812, 4580.088051962842, 4842.787844315015, 5120.555290415089, 5414.254624632776, 5724.799651168521, 6053.156587226817, 6400.347069265301, 6767.451331672943, 7155.611567767526, 7566.035483569709, 8000.000055410447};
final int[][] ledArray = {
  {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 4}, {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 4, 7}, 
  {3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 4, 4}, {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 4, 7}, 
  {2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 4, 5}, {3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 5}, 
  {4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 5}, {5, 4, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 5}, 
  {5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4}, {5, 4, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4}, 
  {5, 4, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3}, {6, 4, 3, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 3, 2, 3, 3, 3, 4}, 
  {6, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4}, {3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3}};
  
byte[][] ledHue = new byte[columns][rows];
byte[][] ledSat = new byte[columns][rows];
byte[][] ledLum = new byte[columns][rows];
float[] spectrum = new float[fftsize];
float[] intensityArray = new float [columns];

//EDIT
final float[] EQARRAY = {-5, -4, -3, -2, -1.5, -0.85, -0.5, 2, 9, 12, 14, 15, 19, 19, 22, 22.5, 23, 24, 25, 26};
final int mindb = 5;
final int maxdb = 60;
int scale = 12;

//TIMERS
long timer1 = 0;
long timer2 = 0;

void setup()
{
  //initSerial();
  size(1024, 400);
  stroke(255);
  background(0);
  minim = new Minim(this);
  input = minim.getLineIn(Minim.STEREO, fftsize, samplerate);
  fft = new FFT(fftsize, samplerate);
  timer1 = millis();
}

void draw()
{
  //background(0);
  thread("doFFT");
  //if (mySerial.available() > 0) {
  //if (mySerial.readChar() == '\n') {  //request received from arduino
  //sendIntensityArray();             //send data to arduino
  //}
  //}
  if (millis() - timer1 >= 33) {
    background(0);
    textSize(20);
    text("Scale: " + scale, 10, 30);
    drawSpectrum();
    timer1 = millis();
  }
}



void barsToPixelHue() {
  
}